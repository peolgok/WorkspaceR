R 1일차

0. Open
1. Topic
   1.1 컴퓨터 이해
   1.2 Git 사용법
   1.3 R 환경 설정
   1.4 R 프로그래밍
2. Q & A
3. Close

-----------------------------------------------------------------------------------------------------------
* 참고 사이트

	https://git-scm.com/

	https://www.r-project.org/

	https://rstudio.com/

	https://code.visualstudio.com/

	https://github.com/

-----------------------------------------------------------------------------------------------------------

  1. Software

	System Software : Computer 시스템을 관리하는 S/W

	   - O/S( Operation System ) : computer H/W를 제어하는 S/W
	   - System( Language ) Library : 다른 프로그램이 사용하는 기능을
                                          제공하는 S/W 묶음

	Application Software : 사용자 관점의 사용성을 갖는 S/W

   2. Software 개발의 위해 필요한 프로그램

      2.1 Editor program
	  : Source code( Script ) 작성( Text 편집기 )
	    * Text 파일 : ASCII 형식으로 구성된 파일
	    * Binary 파일 : Binary 형식으로 구성된 파일

      2.2 Compiler ( Compile program ) ( Interpreter [ Interprete program ] )
	  : Source code를 Binary 형태로 번역하는 프로그램
	    * Compiler : 일괄 번역하는 방식 - c, c++, Java, c#
	    * Interpreter : Code 한 줄씩 번역하는 방식 - R, Python

            * Syntax Error : 번역시 오류 발생, 문법에 맞지 않는다.
	    
      2.3 Linker( Link program )
          : Binary 형태로 바뀐 파일을 실행 가능한 파일로 만드는 프로그램
          : 이때 language library를 link한다.

            * Link Error : language library에 없는 기능 사용시 발생

      2.4 program을 실행하는 프로그램( Loader )
	
	    ***** Run-time Error : 프로그램 결과가 원하는 결과가 아닌 모든 경우

      * IDE( Intergreted Development Environment, 통합 개발 환경 )
	: Source 편집, 번역, link, 실행, debuggin을 하나의 프로그램으로 수행

	R 프로그램( https://www.r-project.org/ ) : Interpreter포함
	R Studio ( https://rstudio.com/ ) : R용 IDE

2. 버전( 형상 ) 관리 : 문서에 대한 이력 관리 
   2.1 중앙 집중 방식 : SVN
   2.2 분산 방식 : Git

3. Git 사용 방법
   - Local에서 사용
   3.1 git 초기화( init ) - git init
   3.2 git으로 관리할 대상 추가( add ) - git add <파일명> 
   3.3 관리 대상 확정( commit ) - git commit -m "설명"

   - Remote와 연계
   3.5 github( remote )와 연결
   3.6 github( remote )에 올리기( push )

   3.8 github( remote )에서 현재 pc( Local )로 가져오기( pull )
